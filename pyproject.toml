[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "async-websocket-client"
version = "0.0.0"
description = ""
authors = ["irocshers <develop.iam@rocshers.com>"]
readme = "readme.md"
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [{include = "async_websocket_client"}]

[tool.poetry.dependencies]
python = "^3.8"
websockets = "^11.0.2"

[tool.poetry.dev-dependencies]
pytest = "^7.1.1"
pytest-cov = "^3.0.0"
coverage = "^6.3.2"
mypy = "^0.942"
black = "^22.10.0"
ruff = "^0.0.253"
isort = "^5.12.0"

[tool.poetry.group.extra.dependencies]
fastapi = "^0.95.1"
redis = "^4.5.4"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.2.2"
types-redis = "^4.5.4.1"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
# select = ["A", "B", "C", "D", "E", "F", "I", "UP"]
select = ["A", "B", "C", "E", "F", "I", "UP"]
# fixable = ["A", "B", "C", "D", "E", "F", "I", "UP"]
fixable = ["A"]
ignore = ["UP004", "D100", "D101", "D102", "D103", "D104", "D107", "D400", "D415"]
line-length = 120
target-version = "py38"

[tool.coverage.run]
omit = [
    "*/tests/*",
    "install-poetry.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.poetry-git-version-plugin]
ignore_errors = false

[tool.pytest.ini_options]
addopts = "-vvs --tb=short"
xfail_strict = true
testpaths = [
    "tests",
    "integration",
]
python_files = [
    "tests/*.py",
    "test_*.py"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:Module already imported:pytest.PytestWarning"
]

[tool.mypy]
python_version = 3.8
